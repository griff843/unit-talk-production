# Multi-stage build for production optimization
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ git

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY src/ ./src/
COPY config/ ./config/

# Build the application
RUN npm run build

# Production stage
FROM node:18-alpine AS production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S unitalk -u 1001

# Set working directory
WORKDIR /app

# Install production dependencies and security updates
RUN apk add --no-cache \
    dumb-init \
    curl \
    ca-certificates \
    && apk upgrade --no-cache \
    && rm -rf /var/cache/apk/*

# Copy package files
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production --no-audit --no-fund && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/config ./config

# Copy additional files
COPY scripts/ ./scripts/
COPY migrations/ ./migrations/

# Create necessary directories
RUN mkdir -p logs temp && \
    chown -R unitalk:nodejs /app

# Set environment variables
ENV NODE_ENV=production
ENV PORT=3000
ENV METRICS_PORT=3001

# Expose ports
EXPOSE 3000 3001

# Switch to non-root user
USER unitalk

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:3000/health || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["node", "dist/index.js"]

# Labels for metadata
LABEL maintainer="Unit Talk Team <dev@unittalk.com>"
LABEL version="1.0.0"
LABEL description="Unit Talk Discord Bot - Production Build"
LABEL org.opencontainers.image.source="https://github.com/unit-talk/custom-bot"
LABEL org.opencontainers.image.documentation="https://docs.unittalk.com"
LABEL org.opencontainers.image.licenses="MIT"