// src/agents/IngestionAgent/ingestion.types.ts

import { z } from 'zod';

// Match your actual Supabase schema:
export const RawPropSchema = z.object({
  scraped_at: z.string().or(z.date()).nullable(),      // timestamp with time zone
  edge_score: z.number().int().nullable(),
  auto_approved: z.boolean().nullable(),
  context_flag: z.boolean().nullable(),
  created_at: z.string().or(z.date()).nullable(),      // timestamp without time zone
  promoted_to_picks: z.boolean().nullable(),
  game_id: z.string().nullable(),                      // uuid (store as string for ingest)
  outcomes: z.any().nullable(),                        // jsonb (parse as object/array)
  player_id: z.number().int().nullable(),
  promoted_at: z.string().or(z.date()).nullable(),
  unit_size: z.number().nullable(),
  promoted: z.boolean().nullable(),
  ev_percent: z.number().nullable(),
  trend_score: z.number().int().nullable(),
  matchup_score: z.number().int().nullable(),
  line_score: z.number().int().nullable(),
  role_score: z.number().int().nullable(),
  is_promoted: z.boolean().nullable(),
  updated_at: z.string().or(z.date()).nullable(),
  is_alt_line: z.boolean().nullable(),
  is_primary: z.boolean().nullable(),
  is_valid: z.boolean().nullable(),
  over_odds: z.number().nullable(),
  under_odds: z.number().nullable(),
  game_time: z.string().or(z.date()).nullable(),       // timestamp with time zone
  id: z.string().uuid().optional(),                    // uuid, generated by db
  line: z.number().nullable(),
  odds: z.number().int().nullable(),
  game_date: z.string().nullable(),                    // date
  trend_confidence: z.number().int().nullable(),
  matchup_quality: z.number().int().nullable(),
  line_value_score: z.number().int().nullable(),
  role_stability: z.number().int().nullable(),
  confidence_score: z.number().int().nullable(),
  player_name: z.string().nullable(),
  sport: z.string().nullable(),
  team: z.string().nullable(),
  stat_type: z.string().nullable(),
  outcome: z.string().nullable(),
  direction: z.string().nullable(),
  player_slug: z.string().nullable(),
  external_game_id: z.string().nullable(),
  matchup: z.string().nullable(),
  sport_key: z.string().nullable(),
  fair_odds: z.string().nullable(),
  league: z.string().nullable(),
  unique_key: z.string().nullable(),
  start_time: z.string().nullable(),
  tier: z.string().nullable(),
  tier_tag: z.string().nullable(),
  event_id: z.string().nullable(),
  book: z.string().nullable(),
  provider: z.string().nullable(),
  source: z.string().nullable(),
  external_id: z.string().nullable(),
  market: z.string().nullable(),
  bet_type: z.string().nullable(),
  market_type: z.string().nullable(),
  opponent: z.string().nullable(),
});

export type RawProp = z.infer<typeof RawPropSchema>;
